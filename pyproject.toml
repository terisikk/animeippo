[tool.poetry]
name = "animeippo"
version = "0.1.0"
description = ""
authors = ["Teemu Risikko <teemu.risikko@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
ipykernel = "^6.21.3"
requests = "^2.28.2"
python-dotenv = "^1.0.0"
ijson = "^3.2.0.post0"
pandas = "^1.5.3"
scikit-learn = "^1.2.2"
kmodes = "^0.12.2"


[tool.poetry.group.dev.dependencies]
requests-mock = "^1.10.0"
black = "^23.1.0"
ruff = "^0.0.257"
pytest = "^7.2.2"
bandit = "^1.7.5"
pytest-dotenv = "^0.5.2"
coverage = "^7.2.2"
pytest-mock = "^3.10.0"
matplotlib = "^3.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = [".venv"]

[tool.bandit.assert_used]
skips = ['*/test_*.py'] # Pytest uses asserts

[tool.coverage.run]
source = ["animeippo"]
branch = true
command_line = "-m pytest tests"
data_file = ".coverage"
omit = ["animeippo/util/**"]

[tool.coverage.report]
fail_under = 100
skip_empty = true
skip_covered = true
sort = "-Cover"
show_missing = true
exclude_lines = [
    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
filterwarnings = []
env_files = [
  "conf/prod.env",
]

[tool.ruff]
line-length = 100
exclude = [
  ".git",
  ".venv",
  ".ruff_cache",
  ".devcontainer",
  "__pycache__",
  ".pytest_cache",
  ".github"
]

[tool.black]
line-length = 100

